# Creamos un config map por medio de volumenes
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: front
data: # Variables de acceso a informacion del config map
  test: hola
  nginx: |
    server {
        listen       9090;
        server_name  localhost;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
# Creammos un deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-test
  labels:
    app: front
spec:
  # Creacion de un replicaset
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          volumeMounts: # Es el volumen que se va a montar
          - name: nginx-vol # Nombre del volumen que deseamos agregar
            mountPath: /etc/nginx/conf.d # Lugar en donde se guardara dentro del pod (Solo path - nada de archivos)
      volumes:
        - name: nginx-vol # Le damos nombre del volumen
          configMap:
            name: nginx-config # EL nombre del config map que vamos adjuntar
            items: # Las llaves que estan dentro del config map
            - key: nginx # Agregamos la llave que deseamos del config map
              path: default.conf # El nombre que va a tener el archivo